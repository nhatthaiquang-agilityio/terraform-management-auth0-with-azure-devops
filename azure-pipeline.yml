pr: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
  - repository: TerraformCICD # The name used to reference this repository in the checkout step
    type: github
    name: nhatthaiquang-agilityio/Terraform-CI-CD
    endpoint: nhatthaiquang-agilityio
    ref: refs/heads/main

variables:
  TerraformWorkingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  AzureKeyVaultServiceConnectionName: AzureResourceConnection
  StorgeAccountsName: terraformstateexample
  AzureResourceGroupName: containers
  AzureContainerName: terraform-container-state

stages:
- stage: DeployInTest
  displayName: Deployment in TEST
  jobs:
    - template: jobs/create-app-auth0.yml@TerraformCICD
      parameters:
        TerraformWorkingDirectory: ${{ variables.TerraformWorkingDirectory }}
        AzureKeyVaultServiceConnectionName: ${{ variables.AzureKeyVaultServiceConnectionName }}
        AzureResourceGroupName: ${{ variables.AzureResourceGroupName }}
        StorgeAccountsName: ${{ variables.StorgeAccountsName }}
        AzureContainerName: ${{ variables.AzureContainerName }}
        VarFilePath: 'Environments/test.tfvars'
        AzureRmKeyTFState: 'test.auth0.tfstate'
        EnvironmentName: Test

- stage: DeployInStage
  displayName: Deployment in Stage
  jobs:
    - template: jobs/create-app-auth0.yml@TerraformCICD
      parameters:
        TerraformWorkingDirectory: ${{ variables.TerraformWorkingDirectory }}
        AzureKeyVaultServiceConnectionName: ${{ variables.AzureKeyVaultServiceConnectionName }}
        AzureResourceGroupName: ${{ variables.AzureResourceGroupName }}
        StorgeAccountsName: ${{ variables.StorgeAccountsName }}
        AzureContainerName: ${{ variables.AzureContainerName }}
        VarFilePath: 'Environments/stage.tfvars'
        AzureRmKeyTFState: 'stage.auth0.tfstate'
        EnvironmentName: Stage

  # - job: deploy_on_test
  #   continueOnError: false
  #   steps:
  #   - task: TerraformInstaller@0
  #     displayName: "install"
  #     inputs:
  #       terraformVersion: '1.5.6'

  #   - task: AzureKeyVault@2
  #     displayName: 'Download Azure KV'
  #     inputs:
  #       azureSubscription: ${{ variables.AzureKeyVaultServiceConnectionName }}
  #       KeyVaultName: 'AzKvTerraformVariables'
  #       SecretsFilter: '*'
  #       RunAsPreJob: true

  #   - task: TerraformTaskV3@3
  #     displayName: 'Terraform Init'
  #     inputs:
  #       workingDirectory: ${{ variables.TerraformWorkingDirectory }}
  #       provider: azurerm
  #       command: init
  #       commandOptions: '-var "access_key=$(AzStorageAccountsAccessKey)"'
  #       backendServiceArm: ${{ variables.AzureKeyVaultServiceConnectionName }}
  #       backendAzureRmResourceGroupName: ${{ variables.AzureResourceGroupName }}
  #       backendAzureRmStorageAccountName: ${{ variables.StorgeAccountsName }}
  #       backendAzureRmContainerName: ${{ variables.AzureContainerName }}
  #       backendAzureRmKey: 'test.auth0.tfstate'

  #   - task: TerraformTaskV3@3
  #     displayName: 'validate'
  #     inputs:
  #       workingDirectory: ${{ variables.TerraformWorkingDirectory }}
  #       provider: 'azurerm'
  #       command: 'validate'


  #   - task: TerraformTaskV3@3
  #     displayName: 'Terraform Plan'
  #     inputs:
  #       workingDirectory: ${{ variables.TerraformWorkingDirectory }}
  #       provider: 'azurerm'
  #       environmentServiceNameAzureRM: ${{ variables.AzureKeyVaultServiceConnectionName }}
  #       command: 'plan'
  #       commandOptions: >-
  #         -var-file="Environments/test.tfvars" -lock=false -var "auth0_client_id=$(TFAuth0ClientId)" -var "auth0_client_secret=$(TFAuth0ClientSecret)"

  #   - task: TerraformTaskV3@3
  #     displayName: 'Terraform Apply'
  #     inputs:
  #       workingDirectory: ${{ variables.TerraformWorkingDirectory }}
  #       provider: 'azurerm'
  #       command: 'apply'
  #       environmentServiceNameAzureRM: ${{ variables.AzureKeyVaultServiceConnectionName }}
  #       commandOptions: >-
  #         -var-file="Environments/test.tfvars" -lock=false -var "auth0_client_id=$(TFAuth0ClientId)" -var "auth0_client_secret=$(TFAuth0ClientSecret)" -auto-approve
